#ifndef __COMPOSE_H__
#define __COMPOSE_H__

#include "NeoIncludes.h"

/*
 * The tree is static, therefore no methods for removing/adding elements,
 * to not make life too complicated, this file is generated by a script.
 * 
 * Pointer points to either next node or unicode symbol. This is detected by
 * address range comparison.

*/

struct Node {
    struct {
        uint8_t isLastElement : 1;
        uint8_t isLeaf : 1;
        uint8_t layer : 6;
        uint8_t keycode : 8;
    } layeredKey;
	union {
		uint16_t unicode;
		Node* nodes;
	} payload;
};


class Compose
{
	private:
	Node* currentNode;

<GENERATOR>

	public:
	Compose() : currentNode(const_cast<Node*>(root)){}
		
	uint16_t transition(uint8_t layer, uint8_t key);
	void reset();
	


}; //Compose

#endif //__COMPOSE_H__